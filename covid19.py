# -*- coding: utf-8 -*-
"""covid19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LcA44Geaz25HOo_Fqod-Gc54gttMultA
"""

import subprocess

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import requests
from matplotlib.ticker import (MultipleLocator, FormatStrFormatter)

def grafico(x, y, title='Casos de COVID-19', minor_major_x=None, minor_major_y=None, log_scale=False, show_sum_days=False):
    fig, ax = plt.subplots(figsize=(20, 5))
    ax.plot(x, y)
    ax.grid(zorder=0)
    if minor_major_x is not None:
        ax.xaxis.set_minor_locator(MultipleLocator(minor_major_x[0]))
        ax.xaxis.set_major_locator(MultipleLocator(minor_major_x[1]))
    if show_sum_days:
        ax.xaxis.set_major_formatter(FormatStrFormatter('%d'))
    if log_scale:
        plt.yscale('log')
        ax.yaxis.set_major_formatter(FormatStrFormatter('%d'))
    else:
        if minor_major_y is not None:
            ax.yaxis.set_minor_locator(MultipleLocator(minor_major_y[0]))
            ax.yaxis.set_major_locator(MultipleLocator(minor_major_y[1]))
    plt.ylabel('Casos')
    plt.title(title)
    plt.xticks(rotation=90)
    plt.show()
    # fig.savefig(f'{title}.png')

def grafico_diario(x, y, title='Casos de COVID-19 diariamente', minor_major_x=None, minor_major_y=None, media_por_dias=None):
    fig, ax = plt.subplots(figsize=(20, 5))
    #group_x = x.groupby(by=lambda x: x/media_por_dias, axis=0).mean()
    #group_y = y.groupby(by=lambda x: x/media_por_dias, axis=0).mean()
    ax.bar(x, y)
    ax.grid(zorder=0)
    if minor_major_x is not None:
        ax.xaxis.set_minor_locator(MultipleLocator(minor_major_x[0]))
        ax.xaxis.set_major_locator(MultipleLocator(minor_major_x[1]))
    if minor_major_y is not None:
        ax.yaxis.set_minor_locator(MultipleLocator(minor_major_y[0]))
        ax.yaxis.set_major_locator(MultipleLocator(minor_major_y[1]))
    if media_por_dias is not None:
        media_movel = y.rolling(window=media_por_dias).mean()
        # print(type(media_movel))
        # print(media_movel.tail(15))
        ax.plot(media_movel, label=f'Media nos últimos {media_por_dias} dias', color='red')
        ax.legend()
    plt.ylabel('Casos')
    plt.title(title)
    plt.xticks(rotation=90)
    plt.show()

# baixando dados
# covid_url = 'https://www.dropbox.com/s/ewfu6vytu40m0uw/Historico_covid19_Piracicaba_SP.csv?dl=0'
covid_url = 'https://www.dropbox.com/s/tp52yb4oda456ub/Historico_covid19_Piracicaba_SP.xlsx?dl=0'
# covid_data = 'covid19_piracicaba_sp.csv'
covid_data = 'covid19_piracicaba_sp.xlsx'
subprocess.call(f'wget -c {covid_url} -O {covid_data}', shell=True)
# covid_data = pd.read_csv(covid_data, sep='\t')
covid_data = pd.read_excel(covid_data)
covid_data.columns

# https://www.seade.gov.br/coronavirus/?utm_source=portal&utm_medium=banner&utm_campaign=boletim-completo
# Botão repositorio de dados lá no fim: https://github.com/seade-R/dados-covid-sp
# CSV dados e óbitos por municípios e data: https://github.com/seade-R/dados-covid-sp#casos-e-%C3%B3bitos
# covid_data = 'https://raw.githubusercontent.com/seade-R/dados-covid-sp/master/data/dados_covid_sp.csv'
# covid_data = pd.read_csv(covid_data, sep=';')

## Dando boa diferença, preencher o meu e depois comparar com o do estado

# selecionando Piracicaba
# covid_data = covid_data[covid_data['nome_munic'] == 'Piracicaba']
# colunas_interesse = ['nome_munic', 'datahora', 'casos', 'casos_novos', 'obitos', 'obitos_novos']
# covid_data = covid_data[colunas_interesse]
# covid_data.head(7)

# situação atual
covid_data["data"] = covid_data["data"].astype(str)
print(f'{covid_data["data"].iloc[-1]}')
print(f'CONFIRMADOS: {covid_data["casos"].iloc[-1]}')
print(f'OBITOS: {covid_data["obitos"].iloc[-1]}')

# últimos 7 dias
media_movel = 7
covid_data['media_movel_casos'] = covid_data['casos_novos'].rolling(window=media_movel).mean()
covid_data['media_movel_obitos'] = covid_data['obitos_novos'].rolling(window=media_movel).mean()
covid_data.tail(7)

# casos confirmados: diario
grafico_diario(covid_data['data'], covid_data['casos_novos'], title='Casos de COVID-19 diários em Piracicaba-SP', minor_major_x=(7, 7), minor_major_y=(25, 50), media_por_dias=7)
# obitos confirmados: diario
grafico_diario(covid_data['data'], covid_data['obitos_novos'], title='Óbitos de COVID-19 diários em Piracicaba-SP', minor_major_x=(7, 7), minor_major_y=None, media_por_dias=7)

# covid_data['data'].index.groupby(by=lambda x: x/media_por_dias, axis=0).mean()
# covid_data['casos_novos']
# group_x = x.groupby(by=lambda x: x/media_por_dias, axis=0).mean()
# group_y = y.groupby(by=lambda x: x/media_por_dias, axis=0).mean()

# casos confirmados
grafico(covid_data['data'], covid_data['casos'], title='Casos de COVID-19 em Piracicaba-SP', minor_major_x=(7, 7), minor_major_y=(1000, 2000), log_scale=False)
# casos confirmados log
grafico(covid_data['data'], covid_data['casos'], title='Casos de COVID-19 em Piracicaba-SP', minor_major_x=(7, 7), log_scale=True)

# obitos
grafico(covid_data['data'], covid_data['obitos'], title='Óbitos de COVID-19 em Piracicaba-SP', minor_major_x=(7, 7), minor_major_y=(25, 50), log_scale=False)
# obitos log
grafico(covid_data['data'], covid_data['obitos'], title='Óbitos de COVID-19 em Piracicaba-SP', minor_major_x=(7, 7), log_scale=True)

def grafico_geral(x, c, o, r, s, t, title='Casos de COVID-19 diariamente', minor_major_x=None, minor_major_y=None):
    fig, ax = plt.subplots(figsize=(20, 5))
    # ax.plot(x, c, label='confirmados')
    ax.plot(x, o, label='obitos')
    # ax.plot(x, r, label='recuperados')
    ax.plot(x, s, label='suspeitos')
    ax.plot(x, t, label='tratamento')

    ax.grid(zorder=0)
    if minor_major_x is not None:
        ax.xaxis.set_minor_locator(MultipleLocator(minor_major_x[0]))
        ax.xaxis.set_major_locator(MultipleLocator(minor_major_x[1]))
    if minor_major_y is not None:
        ax.yaxis.set_minor_locator(MultipleLocator(minor_major_y[0]))
        ax.yaxis.set_major_locator(MultipleLocator(minor_major_y[1]))

    plt.title(title)
    plt.legend()
    plt.xticks(rotation=90)
    plt.show()

grafico_geral(covid_data['data'], 
              covid_data['casos'],
              covid_data['obitos'],
              covid_data['recuperados'],
              covid_data['suspeitos'],
              covid_data['em_tratamento'],
              title='Casos de COVID-19 em Piracicaba-SP', minor_major_x=(7, 7))
              # title='Casos de COVID-19 em Piracicaba-SP', minor_major_x=(7, 7), minor_major_y=(250, 500))